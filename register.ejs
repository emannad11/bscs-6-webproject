<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .auth-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: white;
            padding: 20px;
        }
        
        .auth-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            padding: 40px;
            width: 100%;
            max-width: 400px;
        }
        
        .auth-header {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .auth-header h1 {
            color: #333;
            margin-bottom: 10px;
            font-size: 28px;
        }
        
        .auth-header p {
            color: #666;
            margin: 0;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #333;
            font-weight: 500;
        }
        
        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
            box-sizing: border-box;
        }
        
        .form-group input:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .form-group input.error {
            border-color: #e74c3c;
        }
        
        .btn {
            width: 100%;
            padding: 12px;
            background: #667eea;
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: background 0.3s;
            margin-bottom: 15px;
        }
        
        .btn:hover {
            background: #5a6fd8;
        }
        
        .btn:disabled {
            background: #ccc;
            cursor: not-allowed;
        }
        
        .btn-google {
            background: #db4437;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }
        
        .btn-google:hover {
            background: #c23321;
        }
        
        .divider {
            text-align: center;
            margin: 20px 0;
            position: relative;
            color: #666;
        }
        
        .divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: #e1e5e9;
        }
        
        .divider span {
            background: white;
            padding: 0 15px;
        }
        
        .auth-footer {
            text-align: center;
            margin-top: 20px;
        }
        
        .auth-footer a {
            color: #667eea;
            text-decoration: none;
        }
        
        .auth-footer a:hover {
            text-decoration: underline;
        }
        
        .error-message {
            background: #fee;
            color: #e74c3c;
            padding: 10px 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            border: 1px solid #fcc;
        }
        
        .error-list {
            margin: 0;
            padding-left: 20px;
        }
        
        .loading {
            display: none;
            text-align: center;
            margin-top: 10px;
        }
        
        .spinner {
            border: 2px solid #f3f3f3;
            border-top: 2px solid #667eea;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
            display: inline-block;
            margin-right: 10px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .password-requirements {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
        }
        
        .requirement {
            display: flex;
            align-items: center;
            margin: 2px 0;
        }
        
        .requirement.valid {
            color: #27ae60;
        }
        
        .requirement.invalid {
            color: #e74c3c;
        }
        
        .requirement-icon {
            margin-right: 5px;
            font-size: 10px;
        }
    </style>
</head>
<body>
    <div class="auth-container">
        <div class="auth-card">
            <div class="auth-header">
                <h1>ðŸš¨ Register</h1>
                <p>Join Emergency Response System</p>
            </div>
            
            <div id="error-container"></div>
            
            <form id="registerForm">
                <div class="form-group">
                    <label for="name">Full Name</label>
                    <input type="text" id="name" name="name" required value="<%= formData.name || '' %>">
                </div>
                
                <div class="form-group">
                    <label for="email">Email Address</label>
                    <input type="email" id="email" name="email" required value="<%= formData.email || '' %>">
                </div>
                
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" name="password" required>
                    <div class="password-requirements">
                        <div class="requirement" id="req-length">
                            <span class="requirement-icon">âœ—</span>
                            At least 8 characters
                        </div>
                        <div class="requirement" id="req-letter">
                            <span class="requirement-icon">âœ—</span>
                            Contains a letter
                        </div>
                        <div class="requirement" id="req-number">
                            <span class="requirement-icon">âœ—</span>
                            Contains a number
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="confirmPassword">Confirm Password</label>
                    <input type="password" id="confirmPassword" name="confirmPassword" required>
                </div>
                
                <button type="submit" class="btn" id="registerBtn">
                    Create Account
                </button>
            </form>
            
            <div class="divider">
                <span>or</span>
            </div>
            
            <a href="/auth/google" class="btn btn-google">
                <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                    <path d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                    <path d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                    <path d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
                </svg>
                Continue with Google
            </a>
            
            <div class="loading" id="loading">
                <div class="spinner"></div>
                Creating your account...
            </div>
            
            <div class="auth-footer">
                <p>Already have an account? <a href="/login">Sign in here</a></p>
            </div>
        </div>
    </div>

    <script>
    
        const passwordInput = document.getElementById('password');
        const requirements = {
            length: document.getElementById('req-length'),
            letter: document.getElementById('req-letter'),
            number: document.getElementById('req-number')
        };
        
        passwordInput.addEventListener('input', (e) => {
            const password = e.target.value;
            
            if (password.length >= 8) {
                requirements.length.classList.add('valid');
                requirements.length.classList.remove('invalid');
                requirements.length.querySelector('.requirement-icon').textContent = 'âœ“';
            } else {
                requirements.length.classList.add('invalid');
                requirements.length.classList.remove('valid');
                requirements.length.querySelector('.requirement-icon').textContent = 'âœ—';
            }
            
        
            if (/[a-zA-Z]/.test(password)) {
                requirements.letter.classList.add('valid');
                requirements.letter.classList.remove('invalid');
                requirements.letter.querySelector('.requirement-icon').textContent = 'âœ“';
            } else {
                requirements.letter.classList.add('invalid');
                requirements.letter.classList.remove('valid');
                requirements.letter.querySelector('.requirement-icon').textContent = 'âœ—';
            }
            
            
            if (/\d/.test(password)) {
                requirements.number.classList.add('valid');
                requirements.number.classList.remove('invalid');
                requirements.number.querySelector('.requirement-icon').textContent = 'âœ“';
            } else {
                requirements.number.classList.add('invalid');
                requirements.number.classList.remove('valid');
                requirements.number.querySelector('.requirement-icon').textContent = 'âœ—';
            }
        });
        

        document.getElementById('registerForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const form = e.target;
            const formData = new FormData(form);
            const data = Object.fromEntries(formData);
            
            const registerBtn = document.getElementById('registerBtn');
            const loading = document.getElementById('loading');
            const errorContainer = document.getElementById('error-container');
            
            
            errorContainer.innerHTML = '';
            
            const errors = [];
            
            if (!data.name || data.name.trim().length < 2) {
                errors.push('Name must be at least 2 characters long');
            }
            
            if (!data.email || !/\S+@\S+\.\S+/.test(data.email)) {
                errors.push('Please provide a valid email address');
            }
            
            if (!data.password || data.password.length < 8 || !/[a-zA-Z]/.test(data.password) || !/\d/.test(data.password)) {
                errors.push('Password must be at least 8 characters long and contain at least one letter and one number');
            }
            
            if (data.password !== data.confirmPassword) {
                errors.push('Passwords do not match');
            }
            
            if (errors.length > 0) {
                errorContainer.innerHTML = `
                    <div class="error-message">
                        <ul class="error-list">
                            ${errors.map(error => `<li>${error}</li>`).join('')}
                        </ul>
                    </div>
                `;
                return;
            }
            
            registerBtn.disabled = true;
            registerBtn.textContent = 'Creating Account...';
            loading.style.display = 'block';
            
            try {
                const response = await fetch('/auth/register', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    window.location.href = result.redirectTo || '/dashboard';
                } else {
                    throw new Error(result.error || 'Registration failed');
                }
                
            } catch (error) {
                console.error('Registration error:', error);
                
                let errorMessage = error.message;
                if (error.message.includes('fetch')) {
                    errorMessage = 'Network error. Please check your connection.';
                }
                
                errorContainer.innerHTML = `
                    <div class="error-message">
                        ${errorMessage}
                    </div>
                `;
                
        
                registerBtn.disabled = false;
                registerBtn.textContent = 'Create Account';
                loading.style.display = 'none';
            }
        });
    </script>
</body>
</html>

