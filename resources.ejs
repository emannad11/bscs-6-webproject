<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <style>
              * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f5f7fa;
            color: #333;
        }
        
        .navbar {
            background: #2c3e50;
            color: white;
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .navbar h1 {
            font-size: 1.5rem;
            font-weight: 600;
        }
        
        .nav-links {
            display: flex;
            gap: 2rem;
            align-items: center;
        }
        
        .nav-links a {
            color: white;
            text-decoration: none;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            transition: background 0.3s;
        }
        
        .nav-links a:hover, .nav-links a.active {
            background: #34495e;
        }
        
        .user-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .user-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #3498db;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }
        
        .logout-btn {
            background: #e74c3c;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            cursor: pointer;
            transition: background  0.3s;
        }
        
        .logout-btn:hover {
            background: #c0392b;
        }
        
        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 2rem;
        }
        
        .page-header {
            text-align: center;
            margin-bottom: 3rem;
        }
        
        .page-header h2 {
            font-size: 2.5rem;
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }
        
        .page-header p {
            color: #7f8c8d;
            font-size: 1.1rem;
        }
        
        .resources-container {
            background: white;
            border-radius: 10px;
            padding: 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .resources-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        
        .resources-header h3 {
            font-size: 1.5rem;
            color: #2c3e50;
        }
        
        .filter-controls {
            display: flex;
            gap: 1rem;
            align-items: center;
        }
        
        .filter-select {
            padding: 0.5rem;
            border: 2px solid #e1e5e9;
            border-radius: 5px;
            font-size: 0.9rem;
        }
        
        .resources-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
        }
        
        .resource-card {
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            padding: 1.5rem;
            transition: box-shadow 0.3s;
        }
        
        .resource-card:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        
        .resource-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
        }
        
        .resource-type {
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }
        
        .resource-type.ambulance::before {
            content: 'üöë';
        }
        
        .resource-type.firetruck::before {
            content: 'üöí';
        }
        
        .resource-type.rescueteam::before {
            content: 'üöÅ';
        }
        
        .resource-type.medicalteam::before {
            content: '‚öïÔ∏è';
        }
        
        .resource-type.police::before {
            content: 'üöì';
        }
        
        .resource-name {
            font-weight: 600;
            color: #2c3e50;
            font-size: 1.1rem;
        }
        
        .resource-location {
            color: #7f8c8d;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .resource-contact {
            color: #3498db;
            margin-bottom: 1rem;
            font-weight: 500;
        }
        
        .resource-status {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 500;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .resource-status.available {
            background: #d5f4e6;
            color: #27ae60;
        }
        
        .resource-status.busy {
            background: #fadbd8;
            color: #e74c3c;
        }
        
        .resource-status.maintenance {
            background: #fef9e7;
            color: #f39c12;
        }
        
        .resource-status:hover {
            transform: scale(1.05);
        }
        
        .status-modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            overflow-y: auto;     
        padding: 2rem 0;
        }
        
        .status-modal-content {
            background-color: white;
            margin: 15% auto;
            padding: 2rem;
            border-radius: 10px;
            width: 90%;
            max-width: 400px;
            text-align: center;
            max-height: 90vh;    
        overflow-y: auto;
        }
        
        .status-options {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            margin: 1.5rem 0;
        }
        
        .status-option {
            padding: 1rem;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .status-option:hover {
            border-color: #3498db;
            background: #f8f9fa;
        }
        
        .status-option.selected {
            border-color: #3498db;
            background: #ebf3fd;
        }
        
        .modal-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
        }
        
        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1rem;
            transition: background 0.3s;
        }
        
        .btn-primary {
            background: #3498db;
            color: white;
        }
        
        .btn-primary:hover {
            background: #2980b9;
        }
        
        .btn-secondary {
            background: #95a5a6;
            color: white;
        }
        
        .btn-secondary:hover {
            background: #7f8c8d;
        }
        
        .empty-state {
            text-align: center;
            padding: 3rem;
            color: #7f8c8d;
        }
        
        .empty-state h4 {
            margin-bottom: 1rem;
            color: #2c3e50;
        }
        
        .stats-bar {
            display: flex;
            justify-content: space-around;
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 2rem;
        }
        
        .stat-item {
            text-align: center;
        }
        
        .stat-number {
            font-size: 1.5rem;
            font-weight: bold;
            color: #2c3e50;
        }
        
        .stat-label {
            font-size: 0.9rem;
            color: #7f8c8d;
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <h1>üö® Emergency Response System</h1>
        <div class="nav-links">
            <a href="/dashboard">Dashboard</a>
            <a href="/predict">AI Prediction</a>
            <a href="/incidents">Incidents</a>
            <a href="/resources" class="active">Resources</a>
        </div>
        <div class="user-info">
            <div class="user-avatar" id="userAvatar"></div>
            <span id="userName">Loading...</span>
            <button class="logout-btn" onclick="logout()">Logout</button>
        </div>
    </nav>

    <div class="container">
        <div class="page-header">
            <h2>üöë Emergency Resources</h2>
            <p>Manage and deploy emergency response resources</p>
        </div>

        <div class="resources-container">
            <div class="stats-bar">
                <div class="stat-item">
                    <div class="stat-number" id="total-resources">0</div>
                    <div class="stat-label">Total Resources</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="available-resources">0</div>
                    <div class="stat-label">Available</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="busy-resources">0</div>
                    <div class="stat-label">Busy</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="maintenance-resources">0</div>
                    <div class="stat-label">Maintenance</div>
                </div>
            </div>
            
            <div class="resources-header">
                <h3>Resource Management</h3>
                <div class="filter-controls">
                    <select class="filter-select" id="status-filter">
                        <option value="">All Status</option>
                        <option value="Available">Available</option>
                        <option value="Busy">Busy</option>
                        <option value="Maintenance">Maintenance</option>
                    </select>
                    <select class="filter-select" id="type-filter">
                        <option value="">All Types</option>
                        <option value="Ambulance">Ambulance</option>
                        <option value="Fire Truck">Fire Truck</option>
                        <option value="Rescue Team">Rescue Team</option>
                        <option value="Medical Team">Medical Team</option>
                        <option value="Police">Police</option>
                    </select>
                </div>
            </div>
            
            <div class="resources-grid" id="resources-grid">
                <% if (resources && resources.length > 0) { %>
                    <% resources.forEach(resource => { %>
                        <div class="resource-card" data-type="<%= resource.type %>" data-status="<%= resource.status %>">
                            <div class="resource-header">
                                <div>
                                    <div class="resource-type <%= resource.type.toLowerCase().replace(' ', '') %>"></div>
                                    <div class="resource-name"><%= resource.type %></div>
                                </div>
                            </div>
                            
                            <div class="resource-location">
                                üìç <%= resource.location %>
                            </div>
                            
                            <div class="resource-contact">
                                üìû <%= resource.contact %>
                            </div>
                            
                            <div class="resource-status <%= resource.status.toLowerCase() %>" 
                                 onclick="openStatusModal(<%= resource.id %>, '<%= resource.status %>')">
                                <%= resource.status %>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div class="empty-state">
                        <h4>No resources available</h4>
                        <p>Emergency resources will appear here when added to the system.</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <div id="statusModal" class="status-modal">
        <div class="status-modal-content">
            <h3>Update Resource Status</h3>
            <p>Select the new status for this resource:</p>
            
            <div class="status-options">
                <div class="status-option" data-status="Available">
                    <strong>Available</strong>
                    <div>Ready for deployment</div>
                </div>
                <div class="status-option" data-status="Busy">
                    <strong>Busy</strong>
                    <div>Currently deployed</div>
                </div>
                <div class="status-option" data-status="Maintenance">
                    <strong>Maintenance</strong>
                    <div>Under maintenance</div>
                </div>
            </div>
            
            <div class="modal-buttons">
                <button class="btn btn-primary" onclick="updateResourceStatus()">Update</button>
                <button class="btn btn-secondary" onclick="closeStatusModal()">Cancel</button>
            </div>
        </div>
    </div>

    <script>
        let currentResourceId = null;
        let selectedStatus = null;

        async function loadUserInfo() {
            try {
                const response = await fetch('/auth/profile');
                if (response.ok) {
                    const data = await response.json();
                    const user = data.user;

                    document.getElementById('userName').textContent = user.name;
                    document.getElementById('userAvatar').textContent = user.name.charAt(0).toUpperCase();
                } else {
                    window.location.href = '/login';
                }
            } catch (error) {
                console.error('Error loading user info:', error);
                window.location.href = '/login';
            }
        }

        async function logout() {
            try {
                const response = await fetch('/auth/logout', {
                    method: 'POST'
                });

                if (response.ok) {
                    window.location.href = '/login';
                } else {
                    console.error('Logout failed');
                }
            } catch (error) {
                console.error('Error during logout:', error);
                window.location.href = '/login';
            }
        }

        function updateStats() {
            const resourceCards = document.querySelectorAll('.resource-card:not([style*="display: none"])');
            const total = resourceCards.length;
            let available = 0, busy = 0, maintenance = 0;

            resourceCards.forEach(card => {
                const status = card.dataset.status.toLowerCase();
                if (status === 'available') available++;
                else if (status === 'busy') busy++;
                else if (status === 'maintenance') maintenance++;
            });

            document.getElementById('total-resources').textContent = total;
            document.getElementById('available-resources').textContent = available;
            document.getElementById('busy-resources').textContent = busy;
            document.getElementById('maintenance-resources').textContent = maintenance;
        }

        function filterResources() {
            const statusFilter = document.getElementById('status-filter').value;
            const typeFilter = document.getElementById('type-filter').value;
            const resourceCards = document.querySelectorAll('.resource-card');

            resourceCards.forEach(card => {
                const cardStatus = card.dataset.status;
                const cardType = card.dataset.type;

                const statusMatch = !statusFilter || cardStatus === statusFilter;
                const typeMatch = !typeFilter || cardType === typeFilter;

                if (statusMatch && typeMatch) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });

            updateStats();
        }

        function openStatusModal(resourceId, currentStatus) {
            currentResourceId = resourceId;
            selectedStatus = currentStatus;

            document.querySelectorAll('.status-option').forEach(option => {
                option.classList.remove('selected');
                if (option.dataset.status === currentStatus) {
                    option.classList.add('selected');
                }
            });

            document.getElementById('statusModal').style.display = 'block';
        }

        function closeStatusModal() {
            document.getElementById('statusModal').style.display = 'none';
            currentResourceId = null;
            selectedStatus = null;
        }

        document.querySelectorAll('.status-option').forEach(option => {
            option.addEventListener('click', () => {
                document.querySelectorAll('.status-option').forEach(opt => opt.classList.remove('selected'));
                option.classList.add('selected');
                selectedStatus = option.dataset.status;
            });
        });

        async function updateResourceStatus() {
            if (!currentResourceId || !selectedStatus) return;

            try {
                const response = await fetch(`/resources/${currentResourceId}/status`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status: selectedStatus })
                });

                const result = await response.json();

                if (result.success) {
                    const resourceCard = document.querySelector(`.resource-card .resource-status[onclick*="${currentResourceId}"]`).closest('.resource-card');
                    const statusElement = resourceCard.querySelector('.resource-status');

                    statusElement.textContent = selectedStatus;
                    statusElement.className = `resource-status ${selectedStatus.toLowerCase()}`;
                    resourceCard.dataset.status = selectedStatus;
                    statusElement.setAttribute('onclick', `openStatusModal(${currentResourceId}, '${selectedStatus}')`);

                    updateStats();
                    closeStatusModal();
                } else {
                    throw new Error(result.error || 'Failed to update status');
                }
            } catch (error) {
                console.error('Error updating resource status:', error);
                alert('Failed to update resource status: ' + error.message);
            }
        }

        document.getElementById('status-filter').addEventListener('change', filterResources);
        document.getElementById('type-filter').addEventListener('change', filterResources);

        window.onclick = function(event) {
            const modal = document.getElementById('statusModal');
            if (event.target === modal) {
                closeStatusModal();
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            loadUserInfo();
            updateStats();
        });
    </script>
</body>
</html>
